# -*- coding: utf-8 -*-
"""district_crime.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ALEM0NT_X0IBzLV5dQ7ehjcjsdHkxeTY
"""

from google.colab import files
uploaded = files.upload()

import numpy as np
import pandas as pd
import seaborn as sns
from matplotlib import pyplot as plt
import time
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn import metrics
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import classification_report,confusion_matrix, roc_auc_score, mean_squared_error,r2_score, accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn import tree
from sklearn.naive_bayes import GaussianNB
from sklearn import svm
from sklearn.ensemble import RandomForestRegressor

df = pd.read_csv(' 01_District_wise_crimes_committed_IPC_2001_2012.csv ')
df

df.head()

print(df.tail)

print(df.columns)

# prompt: print colums with unique status

for col in df.columns:
    print(f"{col}: Unique values = {df[col].nunique()}")

print(df["STATE/UT"].unique())

# prompt: count the number of repeation in the state/ut column

print(df['STATE/UT'].value_counts())

print("Missing values before cleaning:")
print(df.isnull().sum())
df.dropna( inplace=True)
print("MIssing values after cleaning:")
print(df.isnull().sum())

df.rename( columns={
    'STATE/UT': 'State',
    'YEAR': 'Year',
    'DISTRICT': 'District',
    'TOTAL IPC CRIMES': 'Crime_count',
}, inplace= True)

print(df.columns)

df["State"] =df["State"].str.strip()   #.strip() method removes any leading or trailing whitespace characters (like spaces, tabs, or newlines) from the strings in the column.

df.drop_duplicates(inplace=True)
df.isnull().sum()

df= df[["State",'Year','Crime_count']]
df

state_year_crime = df.groupby(['State', 'Year'])['Crime_count'].sum()
state_year_crime

df.tail(100)

state_total_crime = df.groupby('State')['Crime_count'].sum().reset_index()
state_total_crime

#pie chart
plt.figure(figsize=(15,20))
plt.pie(state_total_crime['Crime_count'], labels=state_total_crime['State'], autopct='%1.1f%%', startangle=140)
plt.title('Crime Count by State' , fontsize=20)
plt.axis('equal')
plt.show()